{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x01d5d6d99e6351d5bcf4d86e92f3b4df9f06e419df92d630da24726009d5298c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "930552",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2ae57bfe41d4d56247ff9ba602932a14ea84de7ceb696b28691dc2a0bb2d4161",
    "transactionHash": "0x01d5d6d99e6351d5bcf4d86e92f3b4df9f06e419df92d630da24726009d5298c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "930552",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e750e75c0c3407e558454125301b8771",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"priceFeedAddress\":\"Can be set by function calls to adapt to different chains\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    /**\\n     *\\n     * @param priceFeedAddress Can be set by function calls to adapt to different chains\\n     */\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MIN_USD,\\n            \\\"Failed! Not enough paid\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        payable(msg.sender).transfer(address(this).balance);\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed\\\");\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender is not owner\\\"); //Every letter takes space -> not gas efficient\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x784d0960a3e4bc1925b14ebae6bb504131745e0572b6b53e43692fb024c2eaef\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); //1^10\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount, AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 price = getPrice(priceFeed); \\n        uint256 ethAmountInUsd = (price * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2b84b1b0b11b5ca993111795e335f0250a7359a5f1921abde69874eff01b8067\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010f0380380620010f083398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051610f7762000179600039600081816102e00152818161036e01526106ad0152610f776000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061089b565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610919565b61066d565b604051610103919061089b565b60405180910390f35b34801561011857600080fd5b50610121610685565b60405161012e91906109a5565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566106ab565b60405161016391906109cf565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610a16565b6106cf565b6040516101a091906109cf565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461070e90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610aa0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610b0c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049c57600080828154811061041657610415610b2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049490610b8a565b9150506103f4565b50600067ffffffffffffffff8111156104b8576104b7610bd2565b5b6040519080825280602002602001820160405280156104e65781602001602082028036833780820191505090505b50600090805190602001906104fc9291906107db565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610543573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610c4d565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105e390610c9e565b60006040518083038185875af1925050503d8060008114610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b5050905080610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090610cff565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106106df57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061071a8361074a565b90506000670de0b6b3a764000085836107339190610d1f565b61073d9190610d90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc9190610e4e565b5050509150506402540be400816107d39190610ec9565b915050919050565b828054828255906000526020600020908101928215610854579160200282015b828111156108535782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107fb565b5b5090506108619190610865565b5090565b5b8082111561087e576000816000905550600101610866565b5090565b6000819050919050565b61089581610882565b82525050565b60006020820190506108b0600083018461088c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e6826108bb565b9050919050565b6108f6816108db565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b60006020828403121561092f5761092e6108b6565b5b600061093d84828501610904565b91505092915050565b6000819050919050565b600061096b610966610961846108bb565b610946565b6108bb565b9050919050565b600061097d82610950565b9050919050565b600061098f82610972565b9050919050565b61099f81610984565b82525050565b60006020820190506109ba6000830184610996565b92915050565b6109c9816108db565b82525050565b60006020820190506109e460008301846109c0565b92915050565b6109f381610882565b81146109fe57600080fd5b50565b600081359050610a10816109ea565b92915050565b600060208284031215610a2c57610a2b6108b6565b5b6000610a3a84828501610a01565b91505092915050565b600082825260208201905092915050565b7f4661696c656421204e6f7420656e6f7567682070616964000000000000000000600082015250565b6000610a8a601783610a43565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610af6601383610a43565b9150610b0182610ac0565b602082019050919050565b60006020820190508181036000830152610b2581610ae9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9582610882565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bc757610bc6610b5b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c37600b83610a43565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b600081905092915050565b50565b6000610c88600083610c6d565b9150610c9382610c78565b600082019050919050565b6000610ca982610c7b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ce9600b83610a43565b9150610cf482610cb3565b602082019050919050565b60006020820190508181036000830152610d1881610cdc565b9050919050565b6000610d2a82610882565b9150610d3583610882565b9250828202610d4381610882565b91508282048414831517610d5a57610d59610b5b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d9b82610882565b9150610da683610882565b925082610db657610db5610d61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610de081610dc1565b8114610deb57600080fd5b50565b600081519050610dfd81610dd7565b92915050565b6000819050919050565b610e1681610e03565b8114610e2157600080fd5b50565b600081519050610e3381610e0d565b92915050565b600081519050610e48816109ea565b92915050565b600080600080600060a08688031215610e6a57610e696108b6565b5b6000610e7888828901610dee565b9550506020610e8988828901610e24565b9450506040610e9a88828901610e39565b9350506060610eab88828901610e39565b9250506080610ebc88828901610dee565b9150509295509295909350565b6000610ed482610e03565b9150610edf83610e03565b9250828202610eed81610e03565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f2557610f24610b5b565b5b8282058414831517610f3a57610f39610b5b565b5b509291505056fea264697066735822122018c76ed7509463c2f380a26cfe2069972bd85b59fcd6753c2935e07c44559d9d64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061089b565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610919565b61066d565b604051610103919061089b565b60405180910390f35b34801561011857600080fd5b50610121610685565b60405161012e91906109a5565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566106ab565b60405161016391906109cf565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610a16565b6106cf565b6040516101a091906109cf565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461070e90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610aa0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610b0c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049c57600080828154811061041657610415610b2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049490610b8a565b9150506103f4565b50600067ffffffffffffffff8111156104b8576104b7610bd2565b5b6040519080825280602002602001820160405280156104e65781602001602082028036833780820191505090505b50600090805190602001906104fc9291906107db565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610543573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610c4d565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105e390610c9e565b60006040518083038185875af1925050503d8060008114610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b5050905080610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090610cff565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106106df57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061071a8361074a565b90506000670de0b6b3a764000085836107339190610d1f565b61073d9190610d90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc9190610e4e565b5050509150506402540be400816107d39190610ec9565b915050919050565b828054828255906000526020600020908101928215610854579160200282015b828111156108535782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107fb565b5b5090506108619190610865565b5090565b5b8082111561087e576000816000905550600101610866565b5090565b6000819050919050565b61089581610882565b82525050565b60006020820190506108b0600083018461088c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e6826108bb565b9050919050565b6108f6816108db565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b60006020828403121561092f5761092e6108b6565b5b600061093d84828501610904565b91505092915050565b6000819050919050565b600061096b610966610961846108bb565b610946565b6108bb565b9050919050565b600061097d82610950565b9050919050565b600061098f82610972565b9050919050565b61099f81610984565b82525050565b60006020820190506109ba6000830184610996565b92915050565b6109c9816108db565b82525050565b60006020820190506109e460008301846109c0565b92915050565b6109f381610882565b81146109fe57600080fd5b50565b600081359050610a10816109ea565b92915050565b600060208284031215610a2c57610a2b6108b6565b5b6000610a3a84828501610a01565b91505092915050565b600082825260208201905092915050565b7f4661696c656421204e6f7420656e6f7567682070616964000000000000000000600082015250565b6000610a8a601783610a43565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610af6601383610a43565b9150610b0182610ac0565b602082019050919050565b60006020820190508181036000830152610b2581610ae9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9582610882565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bc757610bc6610b5b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c37600b83610a43565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b600081905092915050565b50565b6000610c88600083610c6d565b9150610c9382610c78565b600082019050919050565b6000610ca982610c7b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ce9600b83610a43565b9150610cf482610cb3565b602082019050919050565b60006020820190508181036000830152610d1881610cdc565b9050919050565b6000610d2a82610882565b9150610d3583610882565b9250828202610d4381610882565b91508282048414831517610d5a57610d59610b5b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d9b82610882565b9150610da683610882565b925082610db657610db5610d61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610de081610dc1565b8114610deb57600080fd5b50565b600081519050610dfd81610dd7565b92915050565b6000819050919050565b610e1681610e03565b8114610e2157600080fd5b50565b600081519050610e3381610e0d565b92915050565b600081519050610e48816109ea565b92915050565b600080600080600060a08688031215610e6a57610e696108b6565b5b6000610e7888828901610dee565b9550506020610e8988828901610e24565b9450506040610e9a88828901610e39565b9350506060610eab88828901610e39565b9250506080610ebc88828901610dee565b9150509295509295909350565b6000610ed482610e03565b9150610edf83610e03565b9250828202610eed81610e03565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f2557610f24610b5b565b5b8282058414831517610f3a57610f39610b5b565b5b509291505056fea264697066735822122018c76ed7509463c2f380a26cfe2069972bd85b59fcd6753c2935e07c44559d9d64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "priceFeedAddress": "Can be set by function calls to adapt to different chains"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 80,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 84,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 89,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}